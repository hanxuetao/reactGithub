{"version":3,"file":"static/webpack/static/development/pages/_app.js.a495ebf0d5197bf43290.hot-update.js","sources":["webpack:///./lib/withRedux.js","webpack:///./pages/_app.js","webpack:///./store/store.js"],"sourcesContent":["import React from 'react'\nimport createStore from '../store/store'\n\nconst isServer = typeof window === 'undefined'\nconst __NEXT_REDUX_STORE__ = '__NEXT_REDUX_STORE__'\n\nfunction getOrCreateStore(initialState){\n    if(isServer){\n        return createStore(initialState)\n    }\n    if(!window[__NEXT_REDUX_STORE__]){\n        window[__NEXT_REDUX_STORE__] = createStore(initialState)\n    }\n    return window[__NEXT_REDUX_STORE__]\n}\n\nexport default (Comp) => {\n    class WithReduxApp extends React.Component {\n        constructor(props){\n            super(props)\n            this.reduxStore = getOrCreateStore(props.initialReduxState)\n        }\n        render() {\n            const { Component, pageProps, ...rest} = this.props\n            console.log(Component, pageProps)\n            if(pageProps){\n                pageProps.test = '123'\n            }\n            return <Comp\n                Component={Component}\n                pageProps={pageProps}\n                {...rest}\n                reduxStore={this.reduxStore}\n            />\n        }\n    }\n\n    //if the hoc package the component, the hoc should inherit getInitialProps from the Component\n    WithReduxApp.getInitialProps = async (ctx) => {\n        let appProps = {}\n        if(typeof Comp.getInitialProps === 'function') {\n            appProps = await Comp.getInitialProps(ctx)\n        }\n        const reduxStore = getOrCreateStore()\n    }\n    return {\n        ...appProps,\n        initialReduxState: reduxStore.getState()\n    }\n}","import App, { Container } from 'next/app'\nimport {Provider} from 'react-redux'\nimport MyContext from '../lib/my-context'\nimport Layout from '../components/Layout'\nimport 'antd/dist/antd.css';\nimport {Button} from \"antd\";\nimport store from '../store/store'\n\nimport withRedux from '../lib/withRedux'\n\nclass MyApp extends App {\n    state = {\n        context:'value'\n    }\n    static async getInitialProps({ Component }){\n       let pageProps\n        if(Component.getInitialProps){\n            pageProps = await Component.getInitialProps()\n        }\n        return {\n            pageProps\n        }\n    }\n\n    render(){\n        const { Component, pageProps, reduxStore } = this.props\n        return (\n            <Container>\n                <Layout>\n                    <Provider store={store}>\n                    <MyContext.Provider value={this.state.context}>\n                        <Component {...pageProps} />\n                        <Button onClick={() => this.setState({context: `${this.state.context}1`})}>update context</Button>\n                    </MyContext.Provider>\n                    </Provider>\n                </Layout>\n            </Container>\n        )\n    }\n}\n\nexport default withRedux(MyApp)","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport ReduxThunk from 'redux-thunk'\n\nconst initialState = {\n    count:0\n}\n\nconst userInitialState = {\n    username: 'han'\n}\n\nconst ADD = 'ADD'\n// let count = 1 do not change state directly on reducer.\nfunction counterReducer (state = initialState, action) {\n    console.log(state, action)\n    switch (action.type) {\n        case ADD:\n            return {count: state.count + (action.num || 1)} //change whole object instead of using state.count + 1, return state\n        default:\n            return state\n    }\n}\n\nconst UPDATE_USERNAME = 'UPDATE_USERNAME'\nfunction userReducer(state = userInitialState, action){\n    switch(action.type){\n        case UPDATE_USERNAME:\n            return {\n                ...state,// keep other attribute same\n                username: action.name\n            }\n        default:\n            return state\n    }\n}\n\nconst allReducer = combineReducers({\n    counter: counterReducer,\n    user: userReducer\n})\nconst store = createStore(allReducer, {\n    counter: initialState,\n    user: userInitialState\n},\n    applyMiddleware(ReduxThunk),\n)\n\n//action creator\nfunction add (num) {\n    return {\n        type: ADD,\n        num\n    }\n}\n\nfunction addAsync(num){\n    return (dispatch) => {\n        setTimeout(() => {\n            dispatch(add(num))\n        }, 1000)\n    }\n}\n\n// console.log(store.getState())\nstore.dispatch(addAsync(5))\n// console.log(store.getState())\n\nstore.subscribe(() => {\n    console.log('store changed ', store.getState())\n})\nstore.dispatch({ type: ADD })\nstore.dispatch({ type: UPDATE_USERNAME, name:'DaShaBi'})\n\nexport default function initialzeStore(state) {\n    const store = createStore(\n        allReducer,\n        Object.assign({},{\n\n           counter: initialState,\n           user: userInitialState,\n        \n          },state),\n        applyMiddleware(ReduxThunk),\n    )\n    return store\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAGA;AACA;AANA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AAJA;AAMA;AAlBA;AACA;AADA;AAAA;AACA;AACA;AAoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAGA;AACA;AAJA;AAKA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAMA;AAEA;AAFA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjDA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AADA;AACA;;;;;;AAYA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAEA;AAGA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;;;;;;;;;AAxBA;AACA;AACA;;;;;;AACA;AACA;;AADA;AACA;;AACA;AACA;AADA;AACA;;;;;;;;;;;;;;;;;;AAVA;AACA;AA8BA;;;;;;;;;;;;;;;;;;;;;ACzCA;AACA;AAEA;AACA;AADA;AAIA;AACA;AADA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AACA;AAGA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AACA;AAOA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAIA;AACA;AAHA;AAQA;AACA;;;;A","sourceRoot":""}