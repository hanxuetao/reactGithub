{"version":3,"file":"static/webpack/static/development/pages/index.js.0420526e75d4f58f00ac.hot-update.js","sources":["webpack:///./store/store.js"],"sourcesContent":["import { createStore, combineReducers } from 'redux'\n\nconst initialState = {\n    count:0\n}\n\nconst userInitialState = {\n    username: 'han'\n}\n\nconst ADD = 'ADD'\n// let count = 1 do not change state directly on reducer.\nfunction counterReducer (state = initialState, action) {\n    console.log(state, action)\n    switch (action.type) {\n        case ADD:\n            return {count: state.count + 1} //change whole object instead of using state.count + 1, return state\n        default:\n            return state\n    }\n}\n\nconst UPDATE_USERNAME = 'UPDATE_USERNAME'\nfunction userReducer(state = userInitialState, action){\n    switch(action.type){\n        case UPDATE_USERNAME:\n            return {\n                ...state,// keep other attribute same\n                username: action.name\n            }\n        default:\n            return state\n    }\n}\n\nconst allReducer = combineReducers({\n    counter: counterReducer,\n    user: counterReducer\n})\nconst store = createStore(allReducer, {\n    counter: initialState,\n    user: userInitialState\n})\n\n// console.log(store.getState())\nstore.dispatch({ type: ADD })\n// console.log(store.getState())\n\nstore.subscribe(() => {\n    console.log('store changed ', store.getState())\n})\nstore.dispatch({ type: ADD })\n\n\nexport default store"],"mappings":";;;;;;;;;;;;;;AAAA;AAEA;AACA;AADA;AAIA;AACA;AADA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AACA;AAGA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAGA;;;;A","sourceRoot":""}